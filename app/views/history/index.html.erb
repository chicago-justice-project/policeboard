<% title "Superintendent History" %>
<% body_id "history" %>
<head>
  <script src="https://cdn.jsdelivr.net/npm/vega@5"></script>
  <script src="https://cdn.jsdelivr.net/npm/vega-lite@5"></script>
  <script src="https://cdn.jsdelivr.net/npm/vega-embed@6"></script>
  <script type="text/javascript">
    let VEGA_JSON;
    const history_data = $.ajax({
        type: "GET",
        url: "/history/all",
        dataType: "json",
        success: function (result) {
            VEGA_JSON = initializeVegaJson (history_data.responseText);
            renderVega(VEGA_JSON);
        }
    });

    function renderVega (json) {
        let view = new vega.View(vega.parse(json), {
            renderer:  'canvas',  // renderer (canvas or svg)
            container: '#view',   // parent DOM container
            hover:     true       // enable hover processing
        });
        view.runAsync();
    }

    function initializeVegaJson (history_data) {
        console.log('HISTORY DATA: '+JSON.stringify(history_data));
        let vegaJson = {
            "$schema": "https://vega.github.io/schema/vega/v5.json",
            "background": "white",
            "padding": 5,
            "width": 500,
            "height": 300,
            "style": "cell",
            "data": [
                {
                    "name": "history_data",
                    "values": history_data
                },
                {
                    "name": "data_0",
                    "source": "history_data",
                    "transform": [
                        {
                            "type": "aggregate",
                            "groupby": ["last_name", "year_decided"],
                            "ops": ["sum"],
                            "fields": ["vote_count"],
                            "as": ["sum_vote_count"]
                        }
                    ]
                }
            ],
            "signals": [
                {"name": "x_step", "value": 20},
                {
                    "name": "width",
                    "update": "bandspace(domain('x').length, 1, 0.5) * x_step"
                }
            ],
            "marks": [
                {
                    "name": "pathgroup",
                    "type": "group",
                    "from": {
                        "facet": {
                            "name": "faceted_path_main",
                            "data": "data_0",
                            "groupby": ["last_name"]
                        }
                    },
                    "encode": {
                        "update": {
                            "width": {"field": {"group": "width"}},
                            "height": {"field": {"group": "height"}}
                        }
                    },
                    "marks": [
                        {
                            "name": "marks",
                            "type": "line",
                            "style": ["line"],
                            "sort": {"field": "datum[\"year_decided\"]"},
                            "from": {"data": "faceted_path_main"},
                            "encode": {
                                "update": {
                                    "stroke": {"scale": "color", "field": "last_name"},
                                    "description": {
                                        "signal": "\"last_name: \" + (isValid(datum[\"last_name\"]) ? datum[\"last_name\"] : \"\"+datum[\"last_name\"]) + \"; year_decided: \" + (format(datum[\"year_decided\"], \"c\")) + \"; Sum of vote_count: \" + (format(datum[\"sum_vote_count\"], \"c\"))"
                                    },
                                    "x": {"scale": "x", "field": "year_decided"},
                                    "y": {"scale": "y", "field": "sum_vote_count"},
                                    "defined": {
                                        "signal": "isValid(datum[\"sum_vote_count\"]) && isFinite(+datum[\"sum_vote_count\"])"
                                    }
                                }
                            }
                        }
                    ]
                }
            ],
            "scales": [
                {
                    "name": "x",
                    "type": "point",
                    "domain": {"data": "data_0", "field": "year_decided", "sort": true},
                    "range": {"step": {"signal": "x_step"}},
                    "padding": 0.5
                },
                {
                    "name": "y",
                    "type": "linear",
                    "domain": {"data": "data_0", "field": "sum_vote_count"},
                    "range": [{"signal": "height"}, 0],
                    "nice": true,
                    "zero": true
                },
                {
                    "name": "color",
                    "type": "ordinal",
                    "domain": {"data": "data_0", "field": "last_name", "sort": true},
                    "range": "category"
                }
            ],
            "axes": [
                {
                    "scale": "y",
                    "orient": "left",
                    "gridScale": "x",
                    "grid": true,
                    "tickCount": {"signal": "ceil(height/40)"},
                    "domain": false,
                    "labels": false,
                    "aria": false,
                    "maxExtent": 0,
                    "minExtent": 0,
                    "ticks": false,
                    "zindex": 0
                },
                {
                    "scale": "x",
                    "orient": "bottom",
                    "grid": false,
                    "title": "Year Decided",
                    "format": "c",
                    "labelAlign": "right",
                    "labelAngle": 270,
                    "labelBaseline": "middle",
                    "zindex": 0
                },
                {
                    "scale": "y",
                    "orient": "left",
                    "grid": false,
                    "title": "Termination Votes",
                    "format": "c",
                    "labelOverlap": true,
                    "tickCount": {"signal": "ceil(height/40)"},
                    "zindex": 0
                }
            ],
            "legends": [{"stroke": "color", "symbolType": "stroke", "title": "last_name"}]
        }
        return vegaJson;
    }


</script>
</head>
<div>
  <table>
    <tbody>
      <% @board_members.each do |bm| %>
      <tr><td> <%=bm.first_name %> <%=bm.last_name %></td></tr>
      <% end %>
    </tbody>
  </table>
</div>
<div id="view"></div>



